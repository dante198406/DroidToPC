// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: adb_config_demo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "adb_config_demo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace erobbing {
namespace adb_config_demo {

namespace {

const ::google::protobuf::Descriptor* Config_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Config_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Cmd_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_adb_5fconfig_5fdemo_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_adb_5fconfig_5fdemo_2eproto() {
  protobuf_AddDesc_adb_5fconfig_5fdemo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "adb_config_demo.proto");
  GOOGLE_CHECK(file != NULL);
  Config_descriptor_ = file->message_type(0);
  static const int Config_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config, errorcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config, boxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config, keyid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config, shopid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config, boxregisted_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config, provinceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config, cityid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config, manufacturerid_),
  };
  Config_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Config_descriptor_,
      Config::internal_default_instance(),
      Config_offsets_,
      -1,
      -1,
      -1,
      sizeof(Config),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Config, _internal_metadata_));
  ErrorCode_descriptor_ = file->enum_type(0);
  Cmd_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_adb_5fconfig_5fdemo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Config_descriptor_, Config::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_adb_5fconfig_5fdemo_2eproto() {
  Config_default_instance_.Shutdown();
  delete Config_reflection_;
}

void protobuf_InitDefaults_adb_5fconfig_5fdemo_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  Config_default_instance_.DefaultConstruct();
  Config_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_adb_5fconfig_5fdemo_2eproto_once_);
void protobuf_InitDefaults_adb_5fconfig_5fdemo_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_adb_5fconfig_5fdemo_2eproto_once_,
                 &protobuf_InitDefaults_adb_5fconfig_5fdemo_2eproto_impl);
}
void protobuf_AddDesc_adb_5fconfig_5fdemo_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_adb_5fconfig_5fdemo_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025adb_config_demo.proto\022\034com.erobbing.ad"
    "b_config_demo\"\232\001\n\006Config\022\021\n\terrorCode\030\001 "
    "\001(\005\022\r\n\005boxID\030\002 \001(\t\022\r\n\005keyID\030\003 \001(\t\022\016\n\006sho"
    "pID\030\004 \001(\t\022\023\n\013boxRegisted\030\005 \001(\010\022\022\n\nprovin"
    "ceID\030\006 \001(\t\022\016\n\006cityID\030\007 \001(\t\022\026\n\016manufactur"
    "erID\030\010 \001(\t*6\n\tErrorCode\022\006\n\002OK\020\000\022\020\n\014COMMO"
    "N_ERROR\020\001\022\017\n\013UNKNOWN_CMD\020d*{\n\003Cmd\022\r\n\tcmd"
    "_dummy\020\000\022\021\n\rcmdReadConfig\020\001\022\022\n\016cmdWriteC"
    "onfig\020\002\022\022\n\016cmdRegisterBox\020\003\022\024\n\020cmdUnregi"
    "sterBox\020\004\022\024\n\020cmdUnregisterKey\020\005b\006proto3", 399);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "adb_config_demo.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_adb_5fconfig_5fdemo_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_adb_5fconfig_5fdemo_2eproto_once_);
void protobuf_AddDesc_adb_5fconfig_5fdemo_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_adb_5fconfig_5fdemo_2eproto_once_,
                 &protobuf_AddDesc_adb_5fconfig_5fdemo_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_adb_5fconfig_5fdemo_2eproto {
  StaticDescriptorInitializer_adb_5fconfig_5fdemo_2eproto() {
    protobuf_AddDesc_adb_5fconfig_5fdemo_2eproto();
  }
} static_descriptor_initializer_adb_5fconfig_5fdemo_2eproto_;
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorCode_descriptor_;
}
bool ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 100:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Cmd_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Cmd_descriptor_;
}
bool Cmd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Config::kErrorCodeFieldNumber;
const int Config::kBoxIDFieldNumber;
const int Config::kKeyIDFieldNumber;
const int Config::kShopIDFieldNumber;
const int Config::kBoxRegistedFieldNumber;
const int Config::kProvinceIDFieldNumber;
const int Config::kCityIDFieldNumber;
const int Config::kManufacturerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Config::Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_adb_5fconfig_5fdemo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.erobbing.adb_config_demo.Config)
}

void Config::InitAsDefaultInstance() {
}

Config::Config(const Config& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.erobbing.adb_config_demo.Config)
}

void Config::SharedCtor() {
  boxid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shopid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  provinceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cityid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufacturerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&errorcode_, 0, reinterpret_cast<char*>(&boxregisted_) -
    reinterpret_cast<char*>(&errorcode_) + sizeof(boxregisted_));
  _cached_size_ = 0;
}

Config::~Config() {
  // @@protoc_insertion_point(destructor:com.erobbing.adb_config_demo.Config)
  SharedDtor();
}

void Config::SharedDtor() {
  boxid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shopid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  provinceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cityid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufacturerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Config::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Config_descriptor_;
}

const Config& Config::default_instance() {
  protobuf_InitDefaults_adb_5fconfig_5fdemo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Config> Config_default_instance_;

Config* Config::New(::google::protobuf::Arena* arena) const {
  Config* n = new Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Config::Clear() {
// @@protoc_insertion_point(message_clear_start:com.erobbing.adb_config_demo.Config)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Config, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Config*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(errorcode_, boxregisted_);
  boxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shopid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  provinceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  manufacturerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.erobbing.adb_config_demo.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 errorCode = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errorcode_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_boxID;
        break;
      }

      // optional string boxID = 2;
      case 2: {
        if (tag == 18) {
         parse_boxID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_boxid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->boxid().data(), this->boxid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.erobbing.adb_config_demo.Config.boxID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_keyID;
        break;
      }

      // optional string keyID = 3;
      case 3: {
        if (tag == 26) {
         parse_keyID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keyid().data(), this->keyid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.erobbing.adb_config_demo.Config.keyID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_shopID;
        break;
      }

      // optional string shopID = 4;
      case 4: {
        if (tag == 34) {
         parse_shopID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shopid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shopid().data(), this->shopid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.erobbing.adb_config_demo.Config.shopID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_boxRegisted;
        break;
      }

      // optional bool boxRegisted = 5;
      case 5: {
        if (tag == 40) {
         parse_boxRegisted:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &boxregisted_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_provinceID;
        break;
      }

      // optional string provinceID = 6;
      case 6: {
        if (tag == 50) {
         parse_provinceID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_provinceid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->provinceid().data(), this->provinceid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.erobbing.adb_config_demo.Config.provinceID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_cityID;
        break;
      }

      // optional string cityID = 7;
      case 7: {
        if (tag == 58) {
         parse_cityID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cityid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cityid().data(), this->cityid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.erobbing.adb_config_demo.Config.cityID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_manufacturerID;
        break;
      }

      // optional string manufacturerID = 8;
      case 8: {
        if (tag == 66) {
         parse_manufacturerID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_manufacturerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->manufacturerid().data(), this->manufacturerid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.erobbing.adb_config_demo.Config.manufacturerID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.erobbing.adb_config_demo.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.erobbing.adb_config_demo.Config)
  return false;
#undef DO_
}

void Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.erobbing.adb_config_demo.Config)
  // optional int32 errorCode = 1;
  if (this->errorcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errorcode(), output);
  }

  // optional string boxID = 2;
  if (this->boxid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->boxid().data(), this->boxid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.erobbing.adb_config_demo.Config.boxID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->boxid(), output);
  }

  // optional string keyID = 3;
  if (this->keyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyid().data(), this->keyid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.erobbing.adb_config_demo.Config.keyID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->keyid(), output);
  }

  // optional string shopID = 4;
  if (this->shopid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shopid().data(), this->shopid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.erobbing.adb_config_demo.Config.shopID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->shopid(), output);
  }

  // optional bool boxRegisted = 5;
  if (this->boxregisted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->boxregisted(), output);
  }

  // optional string provinceID = 6;
  if (this->provinceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->provinceid().data(), this->provinceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.erobbing.adb_config_demo.Config.provinceID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->provinceid(), output);
  }

  // optional string cityID = 7;
  if (this->cityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cityid().data(), this->cityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.erobbing.adb_config_demo.Config.cityID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->cityid(), output);
  }

  // optional string manufacturerID = 8;
  if (this->manufacturerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->manufacturerid().data(), this->manufacturerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.erobbing.adb_config_demo.Config.manufacturerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->manufacturerid(), output);
  }

  // @@protoc_insertion_point(serialize_end:com.erobbing.adb_config_demo.Config)
}

::google::protobuf::uint8* Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.erobbing.adb_config_demo.Config)
  // optional int32 errorCode = 1;
  if (this->errorcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errorcode(), target);
  }

  // optional string boxID = 2;
  if (this->boxid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->boxid().data(), this->boxid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.erobbing.adb_config_demo.Config.boxID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->boxid(), target);
  }

  // optional string keyID = 3;
  if (this->keyid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyid().data(), this->keyid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.erobbing.adb_config_demo.Config.keyID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->keyid(), target);
  }

  // optional string shopID = 4;
  if (this->shopid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shopid().data(), this->shopid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.erobbing.adb_config_demo.Config.shopID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->shopid(), target);
  }

  // optional bool boxRegisted = 5;
  if (this->boxregisted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->boxregisted(), target);
  }

  // optional string provinceID = 6;
  if (this->provinceid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->provinceid().data(), this->provinceid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.erobbing.adb_config_demo.Config.provinceID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->provinceid(), target);
  }

  // optional string cityID = 7;
  if (this->cityid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cityid().data(), this->cityid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.erobbing.adb_config_demo.Config.cityID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cityid(), target);
  }

  // optional string manufacturerID = 8;
  if (this->manufacturerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->manufacturerid().data(), this->manufacturerid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.erobbing.adb_config_demo.Config.manufacturerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->manufacturerid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:com.erobbing.adb_config_demo.Config)
  return target;
}

size_t Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.erobbing.adb_config_demo.Config)
  size_t total_size = 0;

  // optional int32 errorCode = 1;
  if (this->errorcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errorcode());
  }

  // optional string boxID = 2;
  if (this->boxid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->boxid());
  }

  // optional string keyID = 3;
  if (this->keyid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->keyid());
  }

  // optional string shopID = 4;
  if (this->shopid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shopid());
  }

  // optional bool boxRegisted = 5;
  if (this->boxregisted() != 0) {
    total_size += 1 + 1;
  }

  // optional string provinceID = 6;
  if (this->provinceid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->provinceid());
  }

  // optional string cityID = 7;
  if (this->cityid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cityid());
  }

  // optional string manufacturerID = 8;
  if (this->manufacturerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->manufacturerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.erobbing.adb_config_demo.Config)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.erobbing.adb_config_demo.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.erobbing.adb_config_demo.Config)
    UnsafeMergeFrom(*source);
  }
}

void Config::MergeFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.erobbing.adb_config_demo.Config)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Config::UnsafeMergeFrom(const Config& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.errorcode() != 0) {
    set_errorcode(from.errorcode());
  }
  if (from.boxid().size() > 0) {

    boxid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.boxid_);
  }
  if (from.keyid().size() > 0) {

    keyid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyid_);
  }
  if (from.shopid().size() > 0) {

    shopid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shopid_);
  }
  if (from.boxregisted() != 0) {
    set_boxregisted(from.boxregisted());
  }
  if (from.provinceid().size() > 0) {

    provinceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.provinceid_);
  }
  if (from.cityid().size() > 0) {

    cityid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cityid_);
  }
  if (from.manufacturerid().size() > 0) {

    manufacturerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.manufacturerid_);
  }
}

void Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.erobbing.adb_config_demo.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Config::CopyFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.erobbing.adb_config_demo.Config)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Config::IsInitialized() const {

  return true;
}

void Config::Swap(Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Config::InternalSwap(Config* other) {
  std::swap(errorcode_, other->errorcode_);
  boxid_.Swap(&other->boxid_);
  keyid_.Swap(&other->keyid_);
  shopid_.Swap(&other->shopid_);
  std::swap(boxregisted_, other->boxregisted_);
  provinceid_.Swap(&other->provinceid_);
  cityid_.Swap(&other->cityid_);
  manufacturerid_.Swap(&other->manufacturerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Config::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Config_descriptor_;
  metadata.reflection = Config_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Config

// optional int32 errorCode = 1;
void Config::clear_errorcode() {
  errorcode_ = 0;
}
::google::protobuf::int32 Config::errorcode() const {
  // @@protoc_insertion_point(field_get:com.erobbing.adb_config_demo.Config.errorCode)
  return errorcode_;
}
void Config::set_errorcode(::google::protobuf::int32 value) {
  
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:com.erobbing.adb_config_demo.Config.errorCode)
}

// optional string boxID = 2;
void Config::clear_boxid() {
  boxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Config::boxid() const {
  // @@protoc_insertion_point(field_get:com.erobbing.adb_config_demo.Config.boxID)
  return boxid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Config::set_boxid(const ::std::string& value) {
  
  boxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.erobbing.adb_config_demo.Config.boxID)
}
void Config::set_boxid(const char* value) {
  
  boxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.erobbing.adb_config_demo.Config.boxID)
}
void Config::set_boxid(const char* value, size_t size) {
  
  boxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.erobbing.adb_config_demo.Config.boxID)
}
::std::string* Config::mutable_boxid() {
  
  // @@protoc_insertion_point(field_mutable:com.erobbing.adb_config_demo.Config.boxID)
  return boxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Config::release_boxid() {
  // @@protoc_insertion_point(field_release:com.erobbing.adb_config_demo.Config.boxID)
  
  return boxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Config::set_allocated_boxid(::std::string* boxid) {
  if (boxid != NULL) {
    
  } else {
    
  }
  boxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), boxid);
  // @@protoc_insertion_point(field_set_allocated:com.erobbing.adb_config_demo.Config.boxID)
}

// optional string keyID = 3;
void Config::clear_keyid() {
  keyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Config::keyid() const {
  // @@protoc_insertion_point(field_get:com.erobbing.adb_config_demo.Config.keyID)
  return keyid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Config::set_keyid(const ::std::string& value) {
  
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.erobbing.adb_config_demo.Config.keyID)
}
void Config::set_keyid(const char* value) {
  
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.erobbing.adb_config_demo.Config.keyID)
}
void Config::set_keyid(const char* value, size_t size) {
  
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.erobbing.adb_config_demo.Config.keyID)
}
::std::string* Config::mutable_keyid() {
  
  // @@protoc_insertion_point(field_mutable:com.erobbing.adb_config_demo.Config.keyID)
  return keyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Config::release_keyid() {
  // @@protoc_insertion_point(field_release:com.erobbing.adb_config_demo.Config.keyID)
  
  return keyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Config::set_allocated_keyid(::std::string* keyid) {
  if (keyid != NULL) {
    
  } else {
    
  }
  keyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyid);
  // @@protoc_insertion_point(field_set_allocated:com.erobbing.adb_config_demo.Config.keyID)
}

// optional string shopID = 4;
void Config::clear_shopid() {
  shopid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Config::shopid() const {
  // @@protoc_insertion_point(field_get:com.erobbing.adb_config_demo.Config.shopID)
  return shopid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Config::set_shopid(const ::std::string& value) {
  
  shopid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.erobbing.adb_config_demo.Config.shopID)
}
void Config::set_shopid(const char* value) {
  
  shopid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.erobbing.adb_config_demo.Config.shopID)
}
void Config::set_shopid(const char* value, size_t size) {
  
  shopid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.erobbing.adb_config_demo.Config.shopID)
}
::std::string* Config::mutable_shopid() {
  
  // @@protoc_insertion_point(field_mutable:com.erobbing.adb_config_demo.Config.shopID)
  return shopid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Config::release_shopid() {
  // @@protoc_insertion_point(field_release:com.erobbing.adb_config_demo.Config.shopID)
  
  return shopid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Config::set_allocated_shopid(::std::string* shopid) {
  if (shopid != NULL) {
    
  } else {
    
  }
  shopid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shopid);
  // @@protoc_insertion_point(field_set_allocated:com.erobbing.adb_config_demo.Config.shopID)
}

// optional bool boxRegisted = 5;
void Config::clear_boxregisted() {
  boxregisted_ = false;
}
bool Config::boxregisted() const {
  // @@protoc_insertion_point(field_get:com.erobbing.adb_config_demo.Config.boxRegisted)
  return boxregisted_;
}
void Config::set_boxregisted(bool value) {
  
  boxregisted_ = value;
  // @@protoc_insertion_point(field_set:com.erobbing.adb_config_demo.Config.boxRegisted)
}

// optional string provinceID = 6;
void Config::clear_provinceid() {
  provinceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Config::provinceid() const {
  // @@protoc_insertion_point(field_get:com.erobbing.adb_config_demo.Config.provinceID)
  return provinceid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Config::set_provinceid(const ::std::string& value) {
  
  provinceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.erobbing.adb_config_demo.Config.provinceID)
}
void Config::set_provinceid(const char* value) {
  
  provinceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.erobbing.adb_config_demo.Config.provinceID)
}
void Config::set_provinceid(const char* value, size_t size) {
  
  provinceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.erobbing.adb_config_demo.Config.provinceID)
}
::std::string* Config::mutable_provinceid() {
  
  // @@protoc_insertion_point(field_mutable:com.erobbing.adb_config_demo.Config.provinceID)
  return provinceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Config::release_provinceid() {
  // @@protoc_insertion_point(field_release:com.erobbing.adb_config_demo.Config.provinceID)
  
  return provinceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Config::set_allocated_provinceid(::std::string* provinceid) {
  if (provinceid != NULL) {
    
  } else {
    
  }
  provinceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), provinceid);
  // @@protoc_insertion_point(field_set_allocated:com.erobbing.adb_config_demo.Config.provinceID)
}

// optional string cityID = 7;
void Config::clear_cityid() {
  cityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Config::cityid() const {
  // @@protoc_insertion_point(field_get:com.erobbing.adb_config_demo.Config.cityID)
  return cityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Config::set_cityid(const ::std::string& value) {
  
  cityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.erobbing.adb_config_demo.Config.cityID)
}
void Config::set_cityid(const char* value) {
  
  cityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.erobbing.adb_config_demo.Config.cityID)
}
void Config::set_cityid(const char* value, size_t size) {
  
  cityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.erobbing.adb_config_demo.Config.cityID)
}
::std::string* Config::mutable_cityid() {
  
  // @@protoc_insertion_point(field_mutable:com.erobbing.adb_config_demo.Config.cityID)
  return cityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Config::release_cityid() {
  // @@protoc_insertion_point(field_release:com.erobbing.adb_config_demo.Config.cityID)
  
  return cityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Config::set_allocated_cityid(::std::string* cityid) {
  if (cityid != NULL) {
    
  } else {
    
  }
  cityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cityid);
  // @@protoc_insertion_point(field_set_allocated:com.erobbing.adb_config_demo.Config.cityID)
}

// optional string manufacturerID = 8;
void Config::clear_manufacturerid() {
  manufacturerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Config::manufacturerid() const {
  // @@protoc_insertion_point(field_get:com.erobbing.adb_config_demo.Config.manufacturerID)
  return manufacturerid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Config::set_manufacturerid(const ::std::string& value) {
  
  manufacturerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.erobbing.adb_config_demo.Config.manufacturerID)
}
void Config::set_manufacturerid(const char* value) {
  
  manufacturerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.erobbing.adb_config_demo.Config.manufacturerID)
}
void Config::set_manufacturerid(const char* value, size_t size) {
  
  manufacturerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.erobbing.adb_config_demo.Config.manufacturerID)
}
::std::string* Config::mutable_manufacturerid() {
  
  // @@protoc_insertion_point(field_mutable:com.erobbing.adb_config_demo.Config.manufacturerID)
  return manufacturerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Config::release_manufacturerid() {
  // @@protoc_insertion_point(field_release:com.erobbing.adb_config_demo.Config.manufacturerID)
  
  return manufacturerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Config::set_allocated_manufacturerid(::std::string* manufacturerid) {
  if (manufacturerid != NULL) {
    
  } else {
    
  }
  manufacturerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), manufacturerid);
  // @@protoc_insertion_point(field_set_allocated:com.erobbing.adb_config_demo.Config.manufacturerID)
}

inline const Config* Config::internal_default_instance() {
  return &Config_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace adb_config_demo
}  // namespace erobbing
}  // namespace com

// @@protoc_insertion_point(global_scope)
