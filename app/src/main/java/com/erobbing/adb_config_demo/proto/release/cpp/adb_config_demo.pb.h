// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: adb_config_demo.proto

#ifndef PROTOBUF_adb_5fconfig_5fdemo_2eproto__INCLUDED
#define PROTOBUF_adb_5fconfig_5fdemo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace erobbing {
namespace adb_config_demo {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_adb_5fconfig_5fdemo_2eproto();
void protobuf_InitDefaults_adb_5fconfig_5fdemo_2eproto();
void protobuf_AssignDesc_adb_5fconfig_5fdemo_2eproto();
void protobuf_ShutdownFile_adb_5fconfig_5fdemo_2eproto();

class Config;

enum ErrorCode {
  OK = 0,
  COMMON_ERROR = 1,
  UNKNOWN_CMD = 100,
  ErrorCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ErrorCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = OK;
const ErrorCode ErrorCode_MAX = UNKNOWN_CMD;
const int ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor();
inline const ::std::string& ErrorCode_Name(ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorCode_descriptor(), value);
}
inline bool ErrorCode_Parse(
    const ::std::string& name, ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCode>(
    ErrorCode_descriptor(), name, value);
}
enum Cmd {
  cmd_dummy = 0,
  cmdReadConfig = 1,
  cmdWriteConfig = 2,
  cmdRegisterBox = 3,
  cmdUnregisterBox = 4,
  cmdUnregisterKey = 5,
  Cmd_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Cmd_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Cmd_IsValid(int value);
const Cmd Cmd_MIN = cmd_dummy;
const Cmd Cmd_MAX = cmdUnregisterKey;
const int Cmd_ARRAYSIZE = Cmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* Cmd_descriptor();
inline const ::std::string& Cmd_Name(Cmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    Cmd_descriptor(), value);
}
inline bool Cmd_Parse(
    const ::std::string& name, Cmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Cmd>(
    Cmd_descriptor(), name, value);
}
// ===================================================================

class Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.erobbing.adb_config_demo.Config) */ {
 public:
  Config();
  virtual ~Config();

  Config(const Config& from);

  inline Config& operator=(const Config& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Config& default_instance();

  static const Config* internal_default_instance();

  void Swap(Config* other);

  // implements Message ----------------------------------------------

  inline Config* New() const { return New(NULL); }

  Config* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Config& from);
  void MergeFrom(const Config& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Config* other);
  void UnsafeMergeFrom(const Config& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 errorCode = 1;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::int32 errorcode() const;
  void set_errorcode(::google::protobuf::int32 value);

  // optional string boxID = 2;
  void clear_boxid();
  static const int kBoxIDFieldNumber = 2;
  const ::std::string& boxid() const;
  void set_boxid(const ::std::string& value);
  void set_boxid(const char* value);
  void set_boxid(const char* value, size_t size);
  ::std::string* mutable_boxid();
  ::std::string* release_boxid();
  void set_allocated_boxid(::std::string* boxid);

  // optional string keyID = 3;
  void clear_keyid();
  static const int kKeyIDFieldNumber = 3;
  const ::std::string& keyid() const;
  void set_keyid(const ::std::string& value);
  void set_keyid(const char* value);
  void set_keyid(const char* value, size_t size);
  ::std::string* mutable_keyid();
  ::std::string* release_keyid();
  void set_allocated_keyid(::std::string* keyid);

  // optional string shopID = 4;
  void clear_shopid();
  static const int kShopIDFieldNumber = 4;
  const ::std::string& shopid() const;
  void set_shopid(const ::std::string& value);
  void set_shopid(const char* value);
  void set_shopid(const char* value, size_t size);
  ::std::string* mutable_shopid();
  ::std::string* release_shopid();
  void set_allocated_shopid(::std::string* shopid);

  // optional bool boxRegisted = 5;
  void clear_boxregisted();
  static const int kBoxRegistedFieldNumber = 5;
  bool boxregisted() const;
  void set_boxregisted(bool value);

  // optional string provinceID = 6;
  void clear_provinceid();
  static const int kProvinceIDFieldNumber = 6;
  const ::std::string& provinceid() const;
  void set_provinceid(const ::std::string& value);
  void set_provinceid(const char* value);
  void set_provinceid(const char* value, size_t size);
  ::std::string* mutable_provinceid();
  ::std::string* release_provinceid();
  void set_allocated_provinceid(::std::string* provinceid);

  // optional string cityID = 7;
  void clear_cityid();
  static const int kCityIDFieldNumber = 7;
  const ::std::string& cityid() const;
  void set_cityid(const ::std::string& value);
  void set_cityid(const char* value);
  void set_cityid(const char* value, size_t size);
  ::std::string* mutable_cityid();
  ::std::string* release_cityid();
  void set_allocated_cityid(::std::string* cityid);

  // optional string manufacturerID = 8;
  void clear_manufacturerid();
  static const int kManufacturerIDFieldNumber = 8;
  const ::std::string& manufacturerid() const;
  void set_manufacturerid(const ::std::string& value);
  void set_manufacturerid(const char* value);
  void set_manufacturerid(const char* value, size_t size);
  ::std::string* mutable_manufacturerid();
  ::std::string* release_manufacturerid();
  void set_allocated_manufacturerid(::std::string* manufacturerid);

  // @@protoc_insertion_point(class_scope:com.erobbing.adb_config_demo.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr boxid_;
  ::google::protobuf::internal::ArenaStringPtr keyid_;
  ::google::protobuf::internal::ArenaStringPtr shopid_;
  ::google::protobuf::internal::ArenaStringPtr provinceid_;
  ::google::protobuf::internal::ArenaStringPtr cityid_;
  ::google::protobuf::internal::ArenaStringPtr manufacturerid_;
  ::google::protobuf::int32 errorcode_;
  bool boxregisted_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_adb_5fconfig_5fdemo_2eproto_impl();
  friend void  protobuf_AddDesc_adb_5fconfig_5fdemo_2eproto_impl();
  friend void protobuf_AssignDesc_adb_5fconfig_5fdemo_2eproto();
  friend void protobuf_ShutdownFile_adb_5fconfig_5fdemo_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Config> Config_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Config

// optional int32 errorCode = 1;
inline void Config::clear_errorcode() {
  errorcode_ = 0;
}
inline ::google::protobuf::int32 Config::errorcode() const {
  // @@protoc_insertion_point(field_get:com.erobbing.adb_config_demo.Config.errorCode)
  return errorcode_;
}
inline void Config::set_errorcode(::google::protobuf::int32 value) {
  
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:com.erobbing.adb_config_demo.Config.errorCode)
}

// optional string boxID = 2;
inline void Config::clear_boxid() {
  boxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Config::boxid() const {
  // @@protoc_insertion_point(field_get:com.erobbing.adb_config_demo.Config.boxID)
  return boxid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config::set_boxid(const ::std::string& value) {
  
  boxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.erobbing.adb_config_demo.Config.boxID)
}
inline void Config::set_boxid(const char* value) {
  
  boxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.erobbing.adb_config_demo.Config.boxID)
}
inline void Config::set_boxid(const char* value, size_t size) {
  
  boxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.erobbing.adb_config_demo.Config.boxID)
}
inline ::std::string* Config::mutable_boxid() {
  
  // @@protoc_insertion_point(field_mutable:com.erobbing.adb_config_demo.Config.boxID)
  return boxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Config::release_boxid() {
  // @@protoc_insertion_point(field_release:com.erobbing.adb_config_demo.Config.boxID)
  
  return boxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config::set_allocated_boxid(::std::string* boxid) {
  if (boxid != NULL) {
    
  } else {
    
  }
  boxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), boxid);
  // @@protoc_insertion_point(field_set_allocated:com.erobbing.adb_config_demo.Config.boxID)
}

// optional string keyID = 3;
inline void Config::clear_keyid() {
  keyid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Config::keyid() const {
  // @@protoc_insertion_point(field_get:com.erobbing.adb_config_demo.Config.keyID)
  return keyid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config::set_keyid(const ::std::string& value) {
  
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.erobbing.adb_config_demo.Config.keyID)
}
inline void Config::set_keyid(const char* value) {
  
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.erobbing.adb_config_demo.Config.keyID)
}
inline void Config::set_keyid(const char* value, size_t size) {
  
  keyid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.erobbing.adb_config_demo.Config.keyID)
}
inline ::std::string* Config::mutable_keyid() {
  
  // @@protoc_insertion_point(field_mutable:com.erobbing.adb_config_demo.Config.keyID)
  return keyid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Config::release_keyid() {
  // @@protoc_insertion_point(field_release:com.erobbing.adb_config_demo.Config.keyID)
  
  return keyid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config::set_allocated_keyid(::std::string* keyid) {
  if (keyid != NULL) {
    
  } else {
    
  }
  keyid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyid);
  // @@protoc_insertion_point(field_set_allocated:com.erobbing.adb_config_demo.Config.keyID)
}

// optional string shopID = 4;
inline void Config::clear_shopid() {
  shopid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Config::shopid() const {
  // @@protoc_insertion_point(field_get:com.erobbing.adb_config_demo.Config.shopID)
  return shopid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config::set_shopid(const ::std::string& value) {
  
  shopid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.erobbing.adb_config_demo.Config.shopID)
}
inline void Config::set_shopid(const char* value) {
  
  shopid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.erobbing.adb_config_demo.Config.shopID)
}
inline void Config::set_shopid(const char* value, size_t size) {
  
  shopid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.erobbing.adb_config_demo.Config.shopID)
}
inline ::std::string* Config::mutable_shopid() {
  
  // @@protoc_insertion_point(field_mutable:com.erobbing.adb_config_demo.Config.shopID)
  return shopid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Config::release_shopid() {
  // @@protoc_insertion_point(field_release:com.erobbing.adb_config_demo.Config.shopID)
  
  return shopid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config::set_allocated_shopid(::std::string* shopid) {
  if (shopid != NULL) {
    
  } else {
    
  }
  shopid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shopid);
  // @@protoc_insertion_point(field_set_allocated:com.erobbing.adb_config_demo.Config.shopID)
}

// optional bool boxRegisted = 5;
inline void Config::clear_boxregisted() {
  boxregisted_ = false;
}
inline bool Config::boxregisted() const {
  // @@protoc_insertion_point(field_get:com.erobbing.adb_config_demo.Config.boxRegisted)
  return boxregisted_;
}
inline void Config::set_boxregisted(bool value) {
  
  boxregisted_ = value;
  // @@protoc_insertion_point(field_set:com.erobbing.adb_config_demo.Config.boxRegisted)
}

// optional string provinceID = 6;
inline void Config::clear_provinceid() {
  provinceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Config::provinceid() const {
  // @@protoc_insertion_point(field_get:com.erobbing.adb_config_demo.Config.provinceID)
  return provinceid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config::set_provinceid(const ::std::string& value) {
  
  provinceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.erobbing.adb_config_demo.Config.provinceID)
}
inline void Config::set_provinceid(const char* value) {
  
  provinceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.erobbing.adb_config_demo.Config.provinceID)
}
inline void Config::set_provinceid(const char* value, size_t size) {
  
  provinceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.erobbing.adb_config_demo.Config.provinceID)
}
inline ::std::string* Config::mutable_provinceid() {
  
  // @@protoc_insertion_point(field_mutable:com.erobbing.adb_config_demo.Config.provinceID)
  return provinceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Config::release_provinceid() {
  // @@protoc_insertion_point(field_release:com.erobbing.adb_config_demo.Config.provinceID)
  
  return provinceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config::set_allocated_provinceid(::std::string* provinceid) {
  if (provinceid != NULL) {
    
  } else {
    
  }
  provinceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), provinceid);
  // @@protoc_insertion_point(field_set_allocated:com.erobbing.adb_config_demo.Config.provinceID)
}

// optional string cityID = 7;
inline void Config::clear_cityid() {
  cityid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Config::cityid() const {
  // @@protoc_insertion_point(field_get:com.erobbing.adb_config_demo.Config.cityID)
  return cityid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config::set_cityid(const ::std::string& value) {
  
  cityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.erobbing.adb_config_demo.Config.cityID)
}
inline void Config::set_cityid(const char* value) {
  
  cityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.erobbing.adb_config_demo.Config.cityID)
}
inline void Config::set_cityid(const char* value, size_t size) {
  
  cityid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.erobbing.adb_config_demo.Config.cityID)
}
inline ::std::string* Config::mutable_cityid() {
  
  // @@protoc_insertion_point(field_mutable:com.erobbing.adb_config_demo.Config.cityID)
  return cityid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Config::release_cityid() {
  // @@protoc_insertion_point(field_release:com.erobbing.adb_config_demo.Config.cityID)
  
  return cityid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config::set_allocated_cityid(::std::string* cityid) {
  if (cityid != NULL) {
    
  } else {
    
  }
  cityid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cityid);
  // @@protoc_insertion_point(field_set_allocated:com.erobbing.adb_config_demo.Config.cityID)
}

// optional string manufacturerID = 8;
inline void Config::clear_manufacturerid() {
  manufacturerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Config::manufacturerid() const {
  // @@protoc_insertion_point(field_get:com.erobbing.adb_config_demo.Config.manufacturerID)
  return manufacturerid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config::set_manufacturerid(const ::std::string& value) {
  
  manufacturerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.erobbing.adb_config_demo.Config.manufacturerID)
}
inline void Config::set_manufacturerid(const char* value) {
  
  manufacturerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.erobbing.adb_config_demo.Config.manufacturerID)
}
inline void Config::set_manufacturerid(const char* value, size_t size) {
  
  manufacturerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.erobbing.adb_config_demo.Config.manufacturerID)
}
inline ::std::string* Config::mutable_manufacturerid() {
  
  // @@protoc_insertion_point(field_mutable:com.erobbing.adb_config_demo.Config.manufacturerID)
  return manufacturerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Config::release_manufacturerid() {
  // @@protoc_insertion_point(field_release:com.erobbing.adb_config_demo.Config.manufacturerID)
  
  return manufacturerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config::set_allocated_manufacturerid(::std::string* manufacturerid) {
  if (manufacturerid != NULL) {
    
  } else {
    
  }
  manufacturerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), manufacturerid);
  // @@protoc_insertion_point(field_set_allocated:com.erobbing.adb_config_demo.Config.manufacturerID)
}

inline const Config* Config::internal_default_instance() {
  return &Config_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace adb_config_demo
}  // namespace erobbing
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::com::erobbing::adb_config_demo::ErrorCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::erobbing::adb_config_demo::ErrorCode>() {
  return ::com::erobbing::adb_config_demo::ErrorCode_descriptor();
}
template <> struct is_proto_enum< ::com::erobbing::adb_config_demo::Cmd> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::erobbing::adb_config_demo::Cmd>() {
  return ::com::erobbing::adb_config_demo::Cmd_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_adb_5fconfig_5fdemo_2eproto__INCLUDED
